#include <cstdint>
#ifndef TESTING_H
#define TESTING_H

// Original box size
#define BOX_W 280
#define BOX_H 240

// =======================
// Example test patterns
// =======================

const uint8_t test_line[64] = {
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,1,1,1,1,1,1,
    0,0,1,1,1,1,1,1,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
};

const uint8_t test_zero[64] = {
    0,0,0,1,1,1,0,0,
    0,0,1,0,0,0,1,0,
    0,1,0,0,0,0,0,1,
    0,1,0,0,0,0,0,1,
    0,1,0,0,0,0,0,1,
    0,1,0,0,0,0,0,1,
    0,0,1,0,0,0,1,0,
    0,0,0,1,1,1,0,0,
};

const uint8_t test_one[64] = {
    0,0,0,0,1,0,0,0,
    0,0,0,1,1,0,0,0,
    0,0,1,0,1,0,0,0,
    0,0,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,
    0,0,0,0,1,0,0,0,
    0,0,1,1,1,1,1,0,
};

const uint8_t test_two[64] = {
    0,0,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,
    0,0,0,0,0,0,1,0,
    0,0,0,0,0,1,0,0,
    0,0,0,0,1,0,0,0,
    0,0,0,1,0,0,0,0,
    0,0,1,0,0,0,0,0,
    0,1,1,1,1,1,1,0,
};

const uint8_t test_five[64] = {
    0,1,1,1,1,1,1,0,
    0,1,0,0,0,0,0,0,
    0,1,0,0,0,0,0,0,
    0,1,1,1,1,1,0,0,
    0,0,0,0,0,0,1,0,
    0,0,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,
    0,0,1,1,1,1,0,0,
};

const uint8_t test_eight[64] = {
    0,0,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,
    0,0,1,1,1,1,0,0,
    0,1,0,0,0,0,1,0,
    0,1,0,0,0,0,1,0,
    0,0,1,1,1,1,0,0,
    0,0,0,0,0,0,0,0,
};

typedef struct {
    const char* name;
    const uint8_t* data;
    uint16_t width;
    uint16_t height;
} TestImage;

const TestImage test_images[] = {
    {"line", test_line, 8, 8},
    {"zero", test_zero, 8, 8},
    {"one", test_one, 8, 8},
    {"two", test_two, 8, 8},
    {"five", test_five, 8, 8},
    {"eight", test_eight, 8, 8},
};

const uint8_t NUM_TEST_IMAGES = sizeof(test_images) / sizeof(TestImage);

#endif
